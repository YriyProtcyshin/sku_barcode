import { useState, useEffect } from "react";

export function useSkuData() {
  const [skuList, setSkuList] = useState(() => {
    const saved = localStorage.getItem("sku_data");
    return saved ? JSON.parse(saved) : {};
  });

  const [loadingStatus, setLoadingStatus] = useState(() => {
    const saved = localStorage.getItem("sku_data");
    return saved ? "‚úÖ –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã" : "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...";
  });

  const [lastModified, setLastModified] = useState(() => {
    return localStorage.getItem("sku_lastModified") || "";
  });

  useEffect(() => {
    async function loadSkuData() {
      try {
        setLoadingStatus("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...");

        // HEAD-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const headRes = await fetch("/sku.json", { method: "HEAD" });
        const etag = headRes.headers.get("etag");
        const modified = headRes.headers.get("last-modified");

        const prevEtag = localStorage.getItem("sku_etag");
        const prevModified = localStorage.getItem("sku_lastModified");
        const savedData = localStorage.getItem("sku_data");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Ñ–∞–π–ª
        if (etag !== prevEtag || modified !== prevModified || !savedData) {
          setLoadingStatus("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...");
          const jsonRes = await fetch("/sku.json");
          const data = await jsonRes.json();

          setSkuList(data);
          setLastModified(modified);

          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
          localStorage.setItem("sku_data", JSON.stringify(data));
          localStorage.setItem("sku_etag", etag);
          localStorage.setItem("sku_lastModified", modified);

          setLoadingStatus("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã");
        } else {
          setSkuList(JSON.parse(savedData));
          setLastModified(prevModified);
          setLoadingStatus("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã (–∏–∑ localStorage)");
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ sku.json:", err);

        const savedData = localStorage.getItem("sku_data");
        const savedModified = localStorage.getItem("sku_lastModified") || "";
        if (savedData) {
          setSkuList(JSON.parse(savedData));
          setLastModified(savedModified);
          setLoadingStatus("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ—Ñ—Ñ–ª–∞–π–Ω)");
        } else {
          setLoadingStatus("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
        }
      }
    }

    loadSkuData();
  }, []);

  return { skuList, loadingStatus, lastModified };
}
